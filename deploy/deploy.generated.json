{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "11617910640570062548"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "azureOpenAILocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "The location of the Azure OpenAI resource to deploy GPT4o to, only required when deployAzureOpenAI is set to true."
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "alttext",
      "metadata": {
        "description": "A prefix to add to the start of all resource names. Note: A \"unique\" suffix will also be added"
      }
    },
    "containerAppImage": {
      "type": "string",
      "defaultValue": "ghcr.io/scottholden/alttextgenaidemo:release",
      "metadata": {
        "description": "The container image to run"
      }
    },
    "deployAzureOpenAI": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "When set to true an Azure OpenAI resource will be deployed, a GPT-4-Turbo deployment will be created, and RBAC configured. If this is set to"
      }
    },
    "azureOpenAIEndpoint": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The endpoint of the AOAI resource to use, only required when deployAzureOpenAI is set to false"
      }
    },
    "azureOpenAIDeploymentName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The deployment name the app should use, it needs to support vision, so GPT-4v or GPT-4-Turbo or GPT-4o, only required when deployAzureOpenAI is set to false"
      }
    },
    "enableDeveloperPage": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If the developer page should be enabled or not"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to all deployed resources"
      }
    }
  },
  "variables": {
    "uniqueNameFormat": "[format('{0}-{{0}}-{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix')))]"
  },
  "resources": [
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-10-01-preview",
      "name": "[format('{0}/{1}', format(variables('uniqueNameFormat'), 'openai'), 'gpt-4o')]",
      "sku": {
        "name": "GlobalStandard",
        "capacity": 15
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-4o",
          "version": "2024-05-13"
        },
        "versionUpgradeOption": "NoAutoUpgrade"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]"
      ]
    },
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-10-01-preview",
      "name": "[format(variables('uniqueNameFormat'), 'openai')]",
      "location": "[parameters('azureOpenAILocation')]",
      "tags": "[parameters('tags')]",
      "kind": "OpenAI",
      "sku": {
        "name": "S0"
      },
      "properties": {
        "customSubDomainName": "[format(variables('uniqueNameFormat'), 'openai')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format(variables('uniqueNameFormat'), 'logs')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[format(variables('uniqueNameFormat'), 'insights')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2024-03-01",
      "name": "[format(variables('uniqueNameFormat'), 'containerapp')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs')), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs'))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2024-03-01",
      "name": "[parameters('prefix')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format(variables('uniqueNameFormat'), 'containerapp'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          }
        },
        "template": {
          "revisionSuffix": "release",
          "containers": [
            {
              "name": "wikiai",
              "image": "[parameters('containerAppImage')]",
              "resources": {
                "cpu": "[json('.25')]",
                "memory": ".5Gi"
              },
              "env": [
                {
                  "name": "aoai__endpoint",
                  "value": "[if(parameters('deployAzureOpenAI'), reference(resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai')), '2023-10-01-preview').endpoint, parameters('azureOpenAIEndpoint'))]"
                },
                {
                  "name": "aoai__chatCompletionVisionDeployment",
                  "value": "[if(parameters('deployAzureOpenAI'), 'gpt-4o', parameters('azureOpenAIDeploymentName'))]"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', format(variables('uniqueNameFormat'), 'insights')), '2020-02-02-preview').ConnectionString]"
                },
                {
                  "name": "appEnabled",
                  "value": "[if(parameters('enableDeveloperPage'), 'true', 'false')]"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 1,
            "rules": [
              {
                "name": "http-requests",
                "http": {
                  "metadata": {
                    "concurrentRequests": "50"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format(variables('uniqueNameFormat'), 'insights'))]",
        "[resourceId('Microsoft.App/managedEnvironments', format(variables('uniqueNameFormat'), 'containerapp'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', format(variables('uniqueNameFormat'), 'openai'), 'gpt-4o')]"
      ]
    },
    {
      "condition": "[parameters('deployAzureOpenAI')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', format(variables('uniqueNameFormat'), 'openai'))]",
      "name": "[guid(subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd'), resourceId('Microsoft.App/containerApps', parameters('prefix')), resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.App/containerApps', parameters('prefix')), '2024-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/containerApps', parameters('prefix'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', format(variables('uniqueNameFormat'), 'openai'))]"
      ]
    }
  ]
}